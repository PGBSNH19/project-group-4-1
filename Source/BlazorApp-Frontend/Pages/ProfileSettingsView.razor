@page "/ProfileSettingsView"
@inject UserRepository userRepo
@using Data;
@using Services;

<div class="display-3 text-center mb-4">Profil inställningar</div>
<form id="form">
    <div class="form-row">
        <div class="col-md-5 mb-3 ml-2">
            <label for="currentUserName">Användarnamn</label>
            <input type="text" class="form-control disabled" id="currentUserName" placeholder="Användarnamn" value=@currentUser.Username disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="newUserName">Nytt Användarnamn</label>
            <input type="text" @bind="NewUsername" class="form-control" id="newUserName" placeholder="Användarnamn">
        </div>

        <div class="col-md-5 mb-3 ml-2">
            <label for="currentPassword">Lösenord</label>
            <input type="text" class="form-control" id="currentPassword" placeholder="Lösenord" value="*********" disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="newPassword">Nytt Lösenord</label>
            <input type="text" @bind="NewPassword" class="form-control" id="newPassword" placeholder="Nytt lösenord ">
        </div>

        <div class="col-md-5 mb-3  ml-2">
            <label for="currentMail">Mailadress</label>
            <input type="text" class="form-control" id="currentMail" placeholder="mailadress" value=@currentUser.Email disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="newEmail">Ny mailadress</label>
            <input type="text" @bind="NewEmail" class="form-control" id="newEmail" placeholder="Mailadress">
        </div>
    </div>

    <div class="pb-2">

        <p class="text-center ">
            <button class="btn btn-outline-success" @onclick="SaveChanges">Spara ändringar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="DeleteAccount">Ta bort mitt konto</button>
        </p>
    </div>
</form>

@code {
    private User currentUser = new User();
    private User newUser = new User();
    private string NewUsername { get; set; }
    private string NewPassword { get; set; }
    private string NewEmail { get; set; }


    protected override async Task OnInitializedAsync()
    {
        currentUser = await userRepo.GetUserById(1);
    }

    public async void SaveChanges()
    {
        currentUser = await userRepo.GetUserById(1);
        newUser = currentUser;

        if (NewUsername != null)
            newUser.Username = NewUsername;
        if (NewPassword != null)
            newUser.Password = NewPassword;
        if (NewEmail != null)
            newUser.Email = NewEmail;

        await userRepo.PutUser(newUser);
    }

    public async void DeleteAccount()
    {
        await userRepo.DeleteUser(currentUser);
    }
}
