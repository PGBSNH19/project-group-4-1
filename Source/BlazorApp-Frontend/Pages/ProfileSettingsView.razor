@page "/ProfileSettingsView"
@inject UserRepository userRepo
@inject AuthenticationStateProvider  authenticationStateProvider
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@using Services;

<div class="display-3 text-center mb-4">Profil inställningar</div>
<form id="form">
    <div class="form-row">
        <div class="col-md-5 mb-3 ml-2">
            <label for="validationDefault01">Användarnamn</label>
            <input type="text" class="form-control disabled" id="validationDefault01" placeholder="Användarnamn" value=@currentUser.Username disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="validationDefault02">Nytt Användarnamn</label>
            <input type="text" class="form-control" id="validationDefault02" placeholder="Användarnamn" required>
        </div>

        <div class="col-md-5 mb-3 ml-2">
            <label for="validationDefault01">Lösenord</label>
            <input type="text" class="form-control" id="validationDefault01" placeholder="Lösenord" value="*********" disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="validationDefault02">Nytt Lösenord</label>
            <input type="text" class="form-control" id="validationDefault02" placeholder="Nytt lösenord " required>
        </div>

        <div class="col-md-5 mb-3  ml-2">
            <label for="validationDefault01">Mailadress</label>
            <input type="text" class="form-control" id="validationDefault01" placeholder="mailadress" value=@currentUser.Email disabled>
        </div>
        <div class="col-md-5 mb-3">
            <label for="validationDefault02">Ny mailadress</label>
            <input type="text" class="form-control" id="validationDefault02" placeholder="Mailadress" required>
        </div>
    </div>

    <div class="pb-2">

        <p class="text-center ">
            <button class="btn btn-outline-success" data-toggle="Spara ändringar">Spara ändringa</button>
            <button type="button" class="btn btn-outline-danger">Ta bort mitt konto</button>
        </p>
    </div>
</form>

@code{
    private User currentUser = new User();
    private User newUser = new User();
    private string NewUsername { get; set; }
    private string NewPassword { get; set; }
    private string NewEmail { get; set; }
    private int currentUserId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var userLoggedIn = authState.User;
        var claimsList = userLoggedIn.Claims.ToList();
        currentUserId = Int32.Parse(claimsList[4].Value);
        currentUser = await userRepo.GetUserById(currentUserId);
    }

    public async void SaveChanges()
    {
        currentUser = await userRepo.GetUserById(currentUserId);
        newUser = currentUser;

        if (NewUsername != null)
            newUser.Username = NewUsername;
        if (NewPassword != null)
            newUser.Password = NewPassword;
        if (NewEmail != null)
            newUser.Email = NewEmail;

        await userRepo.PutUser(newUser);

        this.StateHasChanged();
    }

    public async void DeleteAccount()
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Är du säker på att du vill ta bort kontot: '{currentUser.Username}'?"))
            return;
        await userRepo.DeleteUser(currentUser);
        await Logout();
        navigationManager.NavigateTo("/");
    }

    async Task Logout()
    {
        var localStateProvider = (LocalAuthenticationStateProvider)authenticationStateProvider;
        await localStateProvider.LogoutAsync();
        navigationManager.NavigateTo("/");
    }
}
