@page "/"
@inject HttpClient http;
@inject MarketplaceRepository MarketplaceRepository;
@using Services;


@if (marketplaces.Count != 0)
{
    <AuthorizeView>
        <Authorized>
            <h1>Välkommen @context.User.FindFirst("UserName").Value</h1>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Policy="IsBuyer">
        <Authorized>
            <h1>Du är en Köpare</h1>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Policy="IsSeller">
        <Authorized>
            <h1>Du är en Säljare @context.User.Claims.  </h1>
        </Authorized>
    </AuthorizeView>
    <div id="hero-card" class="card">
        <div class="row no-gutters">
            <div class="col-sm-5">
                <img src="Images/placeholder.png" class="card-img-top" alt="Populäraste marknaden">
            </div>
            <div class="col-sm-7">

                <div class="card-body">
                    <h4 class="card-title">Namn på populäraste marknaden</h4>
                    <p class="card-text">Exempel location</p>
                </div>
            </div>
        </div>
    </div>
    <div class="flex-container">
        @foreach (var Marketplace in marketplaces)
        {
            <div class="card flex-item">
                <img alt="Rekommenderad marknad" class="card-img-top" src="Images/placeholder.png" />
                <div class="card-body">
                    <h4 class="card-title">@Marketplace.Name</h4>
                    <p class="card-text">@Marketplace.Location</p>
                    <p class="card-footer">Börjar: @Marketplace.StartDateTime <br /> Slutar: @Marketplace.EndDateTime</p>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>Loading...</p>
}

@code {

    List<Marketplace> marketplaces = new List<Marketplace>();
    protected override async Task OnInitializedAsync()
    {
        marketplaces = await MarketplaceRepository.GetMarketplaces();
    }

}
