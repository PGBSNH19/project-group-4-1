@page "/"
@inject HttpClient http;
@inject MarketplaceRepository MarketplaceRepository;
@using Services;


@if (marketplaces.Count != 0)
{
    <AuthorizeView>
        <Authorized>
            <h1>Välkommen @context.User.FindFirst("UserName").Value</h1>
        </Authorized>
    </AuthorizeView>
    <div class="flex-container">
        <div class="card hero-card flex-row flex-wrap">
            <div>
                <img src=@marketplaces[1].Image alt="Populäraste marknaden">
            </div>
            <div class="card-body">
                <h4 class="card-title">@marketplaces[1].Name</h4>
                <p class="card-text">@marketplaces[1].Location</p>
            </div>
        </div>
        <div class="flex-items">
            @foreach (var Marketplace in marketplaces)
            {
                <div class="card">
                    <img alt="Rekommenderad marknad" class="card-img-top" src=@Marketplace.Image />
                    <div class="card-body">
                        <h4 class="card-title">@Marketplace.Name</h4>
                        <p class="card-text">@Marketplace.Location</p>
                        <p class="card-footer">Börjar: @Marketplace.StartDateTime <br /> Slutar: @Marketplace.EndDateTime</p>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}
@code {
    List<Marketplace> marketplaces = new List<Marketplace>();
    protected override async Task OnInitializedAsync()
    {
        marketplaces = await MarketplaceRepository.GetMarketplaces();
    }
}
